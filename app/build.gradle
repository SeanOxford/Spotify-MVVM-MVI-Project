apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"

    defaultConfig {
        applicationId "com.sean.spotifyapp"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "com.sean.spotifyapp.MockTestRunner"
        testInstrumentationRunnerArguments clearPackageData: 'true'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }


    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }

    testOptions {
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
    }


//    androidExtensions {
//        experimental = true
//    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation "androidx.recyclerview:recyclerview:1.1.0"
    implementation "androidx.recyclerview:recyclerview-selection:1.1.0-rc01"
    implementation 'com.google.android.material:material:1.1.0'
    testImplementation 'junit:junit:4.12'
    implementation 'com.afollestad.material-dialogs:core:3.3.0'


    implementation 'com.spotify.android:auth:1.2.3'
    implementation 'androidx.browser:browser:1.2.0'

    def lifecycle_version = "2.2.0-alpha03"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"

    // -- Coroutines
    def coroutines_version = "1.2.1"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    api(platform("com.squareup.okhttp3:okhttp-bom:4.4.0"))
    api("com.squareup.okhttp3:okhttp")
    api("com.squareup.okhttp3:logging-interceptor")


    def room_version = "2.2.5"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version" // For Kotlin use kapt instead of annotationProcessor
    implementation "androidx.room:room-ktx:$room_version"
    implementation "androidx.room:room-rxjava2:$room_version"
    implementation "androidx.room:room-guava:$room_version"
    testImplementation "androidx.room:room-testing:$room_version"

    // -- Retrofit2
    def retrofit2_version = "2.7.2"
    implementation "com.squareup.retrofit2:retrofit:$retrofit2_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit2_version"

    def dagger_version = "2.26"
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"
    kaptAndroidTest "com.google.dagger:dagger-compiler:$dagger_version"


    def nav_version = "2.3.0"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    implementation "androidx.navigation:navigation-runtime:$nav_version"
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"

    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"

    def glide_version = "4.11.0"

    implementation "com.github.bumptech.glide:glide:$glide_version"
    annotationProcessor "com.github.bumptech.glide:compiler:$glide_version"

    // androidx.fragment
    def fragment_version = "1.2.5"
    debugImplementation "androidx.fragment:fragment-testing:$fragment_version"
    implementation "androidx.fragment:fragment-ktx:$fragment_version"

    def androidx_test_runner = "1.2.0"
    androidTestImplementation "androidx.test:runner:$androidx_test_runner"
    androidTestImplementation "androidx.test:rules:$androidx_test_runner"

    // orchestrator
    def orchestrator_version = "1.2.0"
    androidTestUtil "androidx.test:orchestrator:$orchestrator_version"

    // Kotlin test
    androidTestImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"

    // Espresso
    def androidx_espresso_core = "3.1.1"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidx_espresso_core"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$androidx_espresso_core"

    def androidx_espresso_idling_resource = "3.2.0"
    androidTestImplementation "androidx.test.espresso:espresso-idling-resource:$androidx_espresso_idling_resource"
    implementation "androidx.test.espresso:espresso-idling-resource:$androidx_espresso_idling_resource"

    // Mockk.io
    def mockk_version = "1.9.2"
    androidTestImplementation "io.mockk:mockk-android:$mockk_version"


    def androidx_test_core = "1.2.0"
    androidTestImplementation "androidx.test:core-ktx:$androidx_test_core"

    def androidx_test_ext = "1.1.1"
    androidTestImplementation "androidx.test.ext:junit-ktx:$androidx_test_ext"


}
